"""
Django settings for kubernetes_admin project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
from __future__ import absolute_import, unicode_literals

import os
import sys
from .emailconfig import *
# from .ldapconfig import *
# from .logfile import *
import datetime
import time
from .cors_origin import CORS_ORIGIN_ALLOW_ALL, CORS_ORIGIN_WHITELIST, CORS_ALLOW_METHODS, CORS_ALLOW_HEADERS
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0,os.path.join(BASE_DIR, 'apps'))
sys.path.insert(0,os.path.join(BASE_DIR, 'extra_apps'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!!f@cj(94k^tt#=&mt)^ck=l^c__hv(!z8(%wr9gdy=n%o*%7%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1','10.232.90.96']
AUTH_USER_MODEL = "users.UserProfile"

# Application definition
APPENV = os.environ.get('APPENV',default='local')

if APPENV == 'beta':
    HARBORHOST = '10.255.57.7'
    HARBORUSER = 'harbor-get'
    HARBORPASS = 'maiVtFOcOA0QQoOM'
    HARBORURL = 'hub-dev.unicode.vip/'
    DBNAME = 'kadmin'
    DBHOST = '127.0.0.1'
    DBPORT = 3306
    DBUSER = 'fengjr_ops'
    DBPASSWD = '123456'
    KAFKA_TOPIC = 'k8scommand_log'
    KAFKA_BTSERFVER = ['10.10.53.53:9092', '10.10.53.54:9092', '10.10.53.55:9092']
    GLUSTER_VIP = '10.255.56.250'
    GLUSTER_ROOTPATH = '/bricks'
    CELERY_TIMEZONE = 'Asia/Shanghai'
    CELERY_BROKER_URL = 'redis://10.232.96.83:6379/0'
    CELERY_RESULT_BACKEND = 'django-db'
    CELERY_ACCEPT_CONTENT = ['json']
    CELERY_TASK_SERIALIZER = 'json'
    CELERY_RESULT_SERIALIZER = 'json'
    GLUSTER_SSH_PORT = '22'
    FILEBEAT_IMAGE = "hub-dev.unicode.vip/base/filebeat-kafka:v1.5"
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': DBNAME,
            'USER': DBUSER,
            'PASSWORD': DBPASSWD,
            'HOST': DBHOST,
            'PORT': DBPORT,
        }
    }

elif APPENV == 'yz':
    HARBORHOST = '10.10.254.61'
    HARBORUSER = 'harbor-get'
    HARBORPASS = 'maiVtFOcOA0QQoOM'
    HARBORURL = 'harbor-pro.unicode.vip/'
    DBNAME = 'k8s_mng'
    DBHOST = '127.0.0.1'
    CELERY_TIMEZONE = 'Asia/Shanghai'
    CELERY_BROKER_URL = 'redis://10.66.18.176:6379/0'
    CELERY_RESULT_BACKEND = 'django-db'
    CELERY_ACCEPT_CONTENT = ['json']
    CELERY_TASK_SERIALIZER = 'json'
    CELERY_RESULT_SERIALIZER = 'json'
    DBPORT = 3306
    DBUSER = 'pro_k8s'
    DBPASSWD = 'ZmE4Yzc1MWQy'
    KAFKA_TOPIC = 'k8scommand_log'
    KAFKA_BTSERFVER = ['10.10.53.53:9092', '10.10.53.54:9092', '10.10.53.55:9092']
    GLUSTER_VIP = '10.10.216.180'
    GLUSTER_ROOTPATH = '/bricks'
    GLUSTER_SSH_PORT = '22'
    FILEBEAT_IMAGE = "harbor-pro.unicode.vip/base/filebeat-kafka:v1.6"
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': DBNAME,
            'USER': DBUSER,
            'PASSWORD': DBPASSWD,
            'HOST': DBHOST,
            'PORT': DBPORT,
        }
    }
elif APPENV == 'local':
    HARBORHOST = '10.255.57.7'
    HARBORUSER = 'harbor-get'
    HARBORPASS = 'maiVtFOcOA0QQoOM'
    HARBORURL = 'hub-dev.unicode.vip/'
    DBNAME = 'kadmin'
    DBHOST = '127.0.0.1'
    DBPORT = 3306
    DBUSER = 'fengjr_ops'
    DBPASSWD = '123456'
    KAFKA_TOPIC = 'k8scommand_log'
    KAFKA_BTSERFVER = ['10.10.53.53:9092', '10.10.53.54:9092', '10.10.53.55:9092']
    GLUSTER_VIP = '10.255.56.250'
    GLUSTER_ROOTPATH = '/bricks'
    CELERY_TIMEZONE = 'Asia/Shanghai'
    CELERY_BROKER_URL = 'redis://10.232.96.83:6379/0'
    CELERY_RESULT_BACKEND = 'django-db'
    CELERY_ACCEPT_CONTENT = ['json']
    CELERY_TASK_SERIALIZER = 'json'
    CELERY_RESULT_SERIALIZER = 'json'
    GLUSTER_SSH_PORT = '22'
    FILEBEAT_IMAGE = "hub-dev.unicode.vip/base/filebeat-kafka:v1.5"
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': DBNAME,
            'USER': DBUSER,
            'PASSWORD': DBPASSWD,
            'HOST': DBHOST,
            'PORT': DBPORT,
        }
    }

else:
    pass


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'kubeadmin',
    'kubenamespace',
    'kubedep',
    'kubepod',
    'kubenode',
    'kubesvc',
    'users',
    'kubeitems',
    'django_celery_results'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'utils.logging_custom_middleware.ApiLoggingMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication'
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

JWT_AUTH = {
    'JWT_VERIFY': True,
    'JWT_VERIFY_EXPIRATION': True,
    'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=3000),
    'JWT_AUTH_HEADER_PREFIX': 'Bearer',
    'JWT_RESPONSE_PAYLOAD_HANDLER': 'users.views.jwt_response_username_userid_token'
}


ROOT_URLCONF = 'kubernetes_admin.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases




# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static')
]
LOGIN_URL = '/'
# STATIC_ROOT = 'static'